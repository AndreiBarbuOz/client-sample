trigger:
  - master
variables:
  - group: uipath-cicd
  - name: agent.preferPowerShellOnContainers
    value: "True"
  - name: System.Debug
    value: True


stages:
  - stage: BuildAndDeployUat
    displayName: Create build artifact
    jobs:
      - job: BuildArtifact
        pool:
          vmImage: "windows-latest"

        steps:
          - task: UiPathPack@2
            inputs:
              versionType: AutoVersion
              #version: '1.0.0' # Required when versionType == ManualVersion
              projectJsonPath: '$(Build.SourcesDirectory)'
              outputPath: '$(Build.ArtifactStagingDirectory)\output'
              #outputType: 'None' # Options: Process, Library, Tests, Objects, None
              orchestratorConnection: 'uat' # Service connection to UiPath Orchestrator

          - task: UiPathDeploy@2
            inputs:
              orchestratorConnection: 'uat' # Service connection to UiPath Orchestrator
              packagesPath: '$(Build.ArtifactStagingDirectory)\output'
              folderName: 'Default'
              environments: 'test-machines' # Optional


          - publish: $(Build.ArtifactStagingDirectory)\output
            artifact: drop

  - stage: DeployProd
    displayName: Deploy build artifact to Prod
    dependsOn: DeployUat
    condition: succeeded()
    jobs:
      - deployment: deployProd
        displayName: Deploy package to Prod Orchestrator
        pool:
          vmImage: "windows-latest"
        environment: prod
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop
                  displayName: Download build artifact on build agent
                - task: UiPathDeploy@2
                  inputs:
                    orchestratorConnection: 'prod' # Service connection to UiPath Orchestrator
                    packagesPath: '$(Pipeline.Workspace)\drop'
                    folderName: 'Default'
                    environments: 'test-machines' # Optional

